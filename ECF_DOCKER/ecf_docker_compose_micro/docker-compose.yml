version: "3.3"
services:

  redis:
    image: redis
    container_name: redis
    env_file: .env
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data

  client:
    container_name: client_container
    env_file: .env
    build:
      context: ./client
      dockerfile: dockerfile
    depends_on:
      - db
      - redis
    ports:
      - ${REACT_APP_PORT}:80

  db:
    container_name: db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ecommerce_app_database
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - ${DB_PORT}:3306
    expose:
      - ${DB_PORT}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mysql-phpmyadmin

  phpmyadmin:
    image: phpmyadmin
    restart: always
    depends_on:
      - db
      - redis
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8090:80"
    networks:
      - mysql-phpmyadmin

  payement:
    container_name: service_payement
    ports:
      - ${PAYMENT_SERVICE_PORT}:8085
    env_file: .env
    build:
      context: ./server/payment-service
      dockerfile: .dockerfile
    depends_on:
      - db
      - redis
    environment:
      PORT: ${PAYMENT_SERVICE_PORT}

  search:
    container_name: service_search
    ports:
      - ${SEARCH_SUGGESTION_SERVICE_PORT}:8086
    env_file: .env
    build:
      context: ./server/search-suggestion-service
      dockerfile: .dockerfile
    depends_on:
      - db
      - redis
    environment:
      PORT: ${SEARCH_SUGGESTION_SERVICE_PORT}

  data:
    container_name: service_common_data
    ports:
      - ${COMMON_DATA_SERVICE_PORT}:8083
    env_file: .env
    build:
      context: ./server/common-data-service
      dockerfile: .dockerfile
    depends_on:
      - db
      - redis
    environment:
      PORT: ${COMMON_DATA_SERVICE_PORT}

  auth:
    container_name: service_authentification
    ports:
      - ${AUTHENTICATION_SERVICE_PORT}:8084
    env_file: .env
    build:
      context: ./server/authentication-service
      dockerfile: .dockerfile
    depends_on:
      - db
      - redis
    environment:
      PORT: ${AUTHENTICATION_SERVICE_PORT}


volumes:
  db_data:
  redis_data:

networks:
  mysql-phpmyadmin:


